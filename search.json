[{"path":"https://furlan-lab.github.io/flscuts/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Scott N Furlan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://furlan-lab.github.io/flscuts/articles/ProjectData.html","id":"installing-flscuts","dir":"Articles","previous_headings":"","what":"Installing flscuts","title":"How to use UMAP transform on a single cell dataset (Seurat) using iterative Latent Semantic Indexing","text":"First, ensure devtools R package installed, allows install packages GitHub. devtools installed, can easily install using following command:","code":"devtools::install_github(\"furlan-lab/flscuts\")"},{"path":"https://furlan-lab.github.io/flscuts/articles/ProjectData.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"How to use UMAP transform on a single cell dataset (Seurat) using iterative Latent Semantic Indexing","text":"section, ’ll load two Seurat objects, fix celltypes harmonize, create colors.","code":"# Load required packages suppressPackageStartupMessages({   library(flscuts)     library(Seurat)   library(monocle3)   library(viewmastR)   library(ggplot2)   library(scCustomize)   library(tidyr) })"},{"path":"https://furlan-lab.github.io/flscuts/articles/ProjectData.html","id":"load-reference-dataset-and-make-some-colors","dir":"Articles","previous_headings":"Loading data","what":"Load reference dataset and make some colors","title":"How to use UMAP transform on a single cell dataset (Seurat) using iterative Latent Semantic Indexing","text":"","code":"seur <- readRDS(file.path(ROOT_DIR1, \"240926_final_object.RDS\")) # Make some colors cols1 <- as.character(pals::polychrome()[c(1,3:13)]) names(cols1) <- levels(factor(seur$celltype)) cols2 <- c(\"00_PROJECTOR\"=\"grey90\", cols1)  DimPlot_scCustom(seur, group.by = \"celltype\", colors_use = cols1)+theme_void()+ggtitle(\"Reference - aka Projector Dataset\")"},{"path":"https://furlan-lab.github.io/flscuts/articles/ProjectData.html","id":"load-query-dataset","dir":"Articles","previous_headings":"Loading data","what":"Load query dataset","title":"How to use UMAP transform on a single cell dataset (Seurat) using iterative Latent Semantic Indexing","text":"","code":"seu <-readRDS(file.path(ROOT_DIR3, \"240926_5p_seu.RDS\")) DimPlot_scCustom(seu, group.by = \"celltype\", colors_use = cols1)+theme_void()+ggtitle(\"Query - aka Projectee Dataset\")"},{"path":"https://furlan-lab.github.io/flscuts/articles/ProjectData.html","id":"make-sure-labels-are-correct","dir":"Articles","previous_headings":"","what":"Make sure labels are correct","title":"How to use UMAP transform on a single cell dataset (Seurat) using iterative Latent Semantic Indexing","text":"code, show labels given reference query cells correct.","code":""},{"path":"https://furlan-lab.github.io/flscuts/articles/ProjectData.html","id":"first-the-reference","dir":"Articles","previous_headings":"Make sure labels are correct","what":"First the reference","title":"How to use UMAP transform on a single cell dataset (Seurat) using iterative Latent Semantic Indexing","text":"","code":"Idents(seur) <- seur$celltype all_markers <- FindAllMarkers(object = seur) %>%     Add_Pct_Diff() %>% dplyr::filter(pct_diff > 0.6)       top_markers <- Extract_Top_Markers(marker_dataframe = all_markers, num_genes = 5, named_vector = FALSE,     make_unique = TRUE)  Clustered_DotPlot(seurat_object = seur, features = top_markers, colors_use_idents = cols1, k=11, plot_km_elbow = F)"},{"path":"https://furlan-lab.github.io/flscuts/articles/ProjectData.html","id":"and-the-query","dir":"Articles","previous_headings":"Make sure labels are correct","what":"And the query","title":"How to use UMAP transform on a single cell dataset (Seurat) using iterative Latent Semantic Indexing","text":"","code":"Idents(seu) <- seu$celltype all_markers <- FindAllMarkers(object = seu) %>%     Add_Pct_Diff() %>% dplyr::filter(pct_diff > 0.6)       top_markers <- Extract_Top_Markers(marker_dataframe = all_markers, num_genes = 5, named_vector = FALSE,     make_unique = TRUE)  Clustered_DotPlot(seurat_object = seur, features = top_markers, colors_use_idents = cols1, k=11, plot_km_elbow = F)"},{"path":"https://furlan-lab.github.io/flscuts/articles/ProjectData.html","id":"find-shared-features","dir":"Articles","previous_headings":"","what":"Find shared features","title":"How to use UMAP transform on a single cell dataset (Seurat) using iterative Latent Semantic Indexing","text":"section identify similarly variant genes common across two datasets","code":"# Calculate and plot gene dispersion in query dataset seu <- calculate_gene_dispersion(seu) seu <- select_genes(seu, top_n = 10000, logmean_ul = -1, logmean_ll = -8) plot_gene_dispersion(seu) vgq <- get_selected_genes(seu)  # Repeat the process for the reference dataset seur <- calculate_gene_dispersion(seur) seur <- select_genes(seur, top_n = 10000, logmean_ul = -1, logmean_ll = -8) plot_gene_dispersion(seur) vgr <- get_selected_genes(seur)  # Find common genes vg <- intersect(vgq, vgr)"},{"path":"https://furlan-lab.github.io/flscuts/articles/ProjectData.html","id":"iterative-latent-sematic-indexing","dir":"Articles","previous_headings":"","what":"Iterative Latent Sematic Indexing","title":"How to use UMAP transform on a single cell dataset (Seurat) using iterative Latent Semantic Indexing","text":"overall goal use “iterative” (1 iteration) LSI feature set datasets create reduction can used umap transform First, run iterative LSI reference. use arbitrary number LSI components common variant features found . Setting run_umap true enable function run, saving UMAP model object. UMAP performed LSI looks like . reasonable  Next take “projectee”, (aka query data want project) “projector” aka reference run following function creates output containing coordinates cells projectee mapped using features+LSI/UMAP reduction procedure mapped reference cells. example, cells previously seen  Side side looks pretty good exception Tregs, get bit lost.","code":"#iterative LSI comps <- 25 #Number of PCs for clustering seur<-iterative_LSI(seur, num_dim = comps, num_features = length(vg), resolution = c(1e-3), verbose = T, starting_features = vg, run_umap = T) ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck ##  ## Number of nodes: 11290 ## Number of edges: 448690 ##  ## Running Louvain algorithm... ## Maximum modularity in 10 random starts: 0.9996 ## Number of communities: 3 ## Elapsed time: 0 seconds p1 <- DimPlot(seur, group.by = \"celltype\", cols = cols1)+theme_void()+ggtitle(\"Reference - aka Projector Dataset after LSI/UMAP\") p1 res <- project_data(projector = seur, projectee = seu, reduced_dim = \"lsi\", embedding = \"umap\") p2 <- plot_projection(res, seur, seu, projectee_col = \"celltype\")+scale_color_manual(values = cols2)+theme_void()+ guides(color = guide_legend(override.aes = list(size = 3))) p2 cowplot::plot_grid(p1, p2)"},{"path":"https://furlan-lab.github.io/flscuts/articles/ProjectData.html","id":"appendix","dir":"Articles","previous_headings":"","what":"Appendix","title":"How to use UMAP transform on a single cell dataset (Seurat) using iterative Latent Semantic Indexing","text":"","code":"sessionInfo() ## R version 4.3.1 (2023-06-16) ## Platform: x86_64-apple-darwin20 (64-bit) ## Running under: macOS Sonoma 14.6.1 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: America/Los_Angeles ## tzcode source: internal ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] Matrix_1.6-5                tidyr_1.3.1                 ##  [3] scCustomize_2.1.2           ggplot2_3.5.0               ##  [5] viewmastR_0.2.3             monocle3_1.4.3              ##  [7] SingleCellExperiment_1.22.0 SummarizedExperiment_1.30.2 ##  [9] GenomicRanges_1.52.1        GenomeInfoDb_1.41.1         ## [11] IRanges_2.34.1              S4Vectors_0.38.2            ## [13] MatrixGenerics_1.12.3       matrixStats_1.2.0           ## [15] Biobase_2.60.0              BiocGenerics_0.46.0         ## [17] Seurat_5.0.3                SeuratObject_5.0.1          ## [19] sp_2.1-3                    flscuts_0.1.0               ##  ## loaded via a namespace (and not attached): ##   [1] fs_1.6.3                  spatstat.sparse_3.0-3     ##   [3] bitops_1.0-7              lubridate_1.9.3           ##   [5] RcppMsgPack_0.2.3         httr_1.4.7                ##   [7] RColorBrewer_1.1-3        doParallel_1.0.17         ##   [9] backports_1.4.1           tools_4.3.1               ##  [11] sctransform_0.4.1         utf8_1.2.4                ##  [13] R6_2.5.1                  lazyeval_0.2.2            ##  [15] uwot_0.1.16               GetoptLong_1.0.5          ##  [17] withr_3.0.0               gridExtra_2.3             ##  [19] progressr_0.14.0          cli_3.6.2                 ##  [21] textshaping_0.3.7         Cairo_1.6-2               ##  [23] spatstat.explore_3.2-6    fastDummies_1.7.3         ##  [25] labeling_0.4.3            sass_0.4.9                ##  [27] spatstat.data_3.0-4       ggridges_0.5.6            ##  [29] pbapply_1.7-2             pkgdown_2.0.7             ##  [31] systemfonts_1.0.6         foreign_0.8-86            ##  [33] dichromat_2.0-0.1         parallelly_1.37.1         ##  [35] maps_3.4.2                limma_3.56.2              ##  [37] pals_1.8                  rstudioapi_0.15.0         ##  [39] generics_0.1.3            shape_1.4.6.1             ##  [41] gtools_3.9.5              ica_1.0-3                 ##  [43] spatstat.random_3.2-3     dplyr_1.1.4               ##  [45] ggbeeswarm_0.7.2          fansi_1.0.6               ##  [47] abind_1.4-5               lifecycle_1.0.4           ##  [49] yaml_2.3.8                edgeR_3.42.4              ##  [51] snakecase_0.11.1          recipes_1.0.10            ##  [53] Rtsne_0.17                paletteer_1.6.0           ##  [55] grid_4.3.1                promises_1.2.1            ##  [57] crayon_1.5.2              miniUI_0.1.1.1            ##  [59] lattice_0.22-5            beachmat_2.16.0           ##  [61] cowplot_1.1.3             mapproj_1.2.11            ##  [63] pillar_1.9.0              knitr_1.45                ##  [65] ComplexHeatmap_2.16.0     rjson_0.2.21              ##  [67] boot_1.3-28.1             future.apply_1.11.1       ##  [69] codetools_0.2-19          leiden_0.4.3.1            ##  [71] glue_1.7.0                data.table_1.15.2         ##  [73] vctrs_0.6.5               png_0.1-8                 ##  [75] spam_2.10-0               gtable_0.3.4              ##  [77] rematch2_2.1.2            assertthat_0.2.1          ##  [79] cachem_1.0.8              gower_1.0.1               ##  [81] xfun_0.42                 prodlim_2023.08.28        ##  [83] S4Arrays_1.2.0            mime_0.12                 ##  [85] tidygraph_1.3.1           survival_3.5-7            ##  [87] timeDate_4032.109         pbmcapply_1.5.1           ##  [89] iterators_1.0.14          hardhat_1.3.1             ##  [91] lava_1.8.0                ellipsis_0.3.2            ##  [93] fitdistrplus_1.1-11       ipred_0.9-14              ##  [95] ROCR_1.0-11               nlme_3.1-164              ##  [97] bit64_4.0.5               RcppAnnoy_0.0.22          ##  [99] bslib_0.6.1               irlba_2.3.5.1             ## [101] rpart_4.1.23              vipor_0.4.7               ## [103] KernSmooth_2.23-22        colorspace_2.1-0          ## [105] Hmisc_5.1-2               nnet_7.3-19               ## [107] ggrastr_1.0.2             tidyselect_1.2.1          ## [109] bit_4.0.5                 compiler_4.3.1            ## [111] htmlTable_2.4.2           BiocNeighbors_1.18.0      ## [113] hdf5r_1.3.11              desc_1.4.3                ## [115] DelayedArray_0.26.7       plotly_4.10.4             ## [117] checkmate_2.3.1           scales_1.3.0              ## [119] lmtest_0.9-40             stringr_1.5.1             ## [121] digest_0.6.35             goftest_1.2-3             ## [123] presto_1.0.0              spatstat.utils_3.1-0      ## [125] minqa_1.2.6               rmarkdown_2.26            ## [127] XVector_0.40.0            htmltools_0.5.7           ## [129] pkgconfig_2.0.3           base64enc_0.1-3           ## [131] lme4_1.1-35.1             sparseMatrixStats_1.12.2  ## [133] highr_0.10                fastmap_1.1.1             ## [135] rlang_1.1.3               GlobalOptions_0.1.2       ## [137] htmlwidgets_1.6.4         UCSC.utils_1.1.0          ## [139] shiny_1.8.0               DelayedMatrixStats_1.22.6 ## [141] farver_2.1.1              jquerylib_0.1.4           ## [143] zoo_1.8-12                jsonlite_1.8.8            ## [145] BiocParallel_1.34.2       ModelMetrics_1.2.2.2      ## [147] BiocSingular_1.16.0       RCurl_1.98-1.14           ## [149] magrittr_2.0.3            Formula_1.2-5             ## [151] GenomeInfoDbData_1.2.10   dotCall64_1.1-1           ## [153] patchwork_1.2.0           munsell_0.5.0             ## [155] Rcpp_1.0.12               viridis_0.6.5             ## [157] reticulate_1.35.0         pROC_1.18.5               ## [159] stringi_1.8.3             miloR_1.8.1               ## [161] ggraph_2.2.1              zlibbioc_1.46.0           ## [163] MASS_7.3-60.0.1           plyr_1.8.9                ## [165] parallel_4.3.1            listenv_0.9.1             ## [167] ggrepel_0.9.5             forcats_1.0.0             ## [169] deldir_2.0-4              graphlayouts_1.1.0        ## [171] splines_4.3.1             tensor_1.5                ## [173] circlize_0.4.16           locfit_1.5-9.8            ## [175] igraph_2.0.3              spatstat.geom_3.2-9       ## [177] RcppHNSW_0.6.0            reshape2_1.4.4            ## [179] ScaledMatrix_1.8.1        evaluate_0.23             ## [181] ggprism_1.0.4             nloptr_2.0.3              ## [183] foreach_1.5.2             tweenr_2.0.3              ## [185] httpuv_1.6.14             RANN_2.6.1                ## [187] purrr_1.0.2               polyclip_1.10-6           ## [189] future_1.33.1             clue_0.3-65               ## [191] scattermore_1.2           ggforce_0.4.2             ## [193] janitor_2.2.0             rsvd_1.0.5                ## [195] xtable_1.8-4              RSpectra_0.16-1           ## [197] later_1.3.2               class_7.3-22              ## [199] viridisLite_0.4.2         ragg_1.3.0                ## [201] tibble_3.2.1              memoise_2.0.1             ## [203] beeswarm_0.4.0            cluster_2.1.6             ## [205] timechange_0.3.0          globals_0.16.3            ## [207] caret_6.0-94 getwd() ## [1] \"/Users/sfurlan/develop/flscuts/vignettes\""},{"path":"https://furlan-lab.github.io/flscuts/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Scott Furlan. Author, maintainer.","code":""},{"path":"https://furlan-lab.github.io/flscuts/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Furlan S (2024). flscuts: Furlan Lab Shortcuts. R package version 0.1.0, https://furlan-lab.github.io/flscuts/.","code":"@Manual{,   title = {flscuts: Furlan Lab Shortcuts},   author = {Scott Furlan},   year = {2024},   note = {R package version 0.1.0},   url = {https://furlan-lab.github.io/flscuts/}, }"},{"path":"https://furlan-lab.github.io/flscuts/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Furlan Lab Shortcuts","text":"Written Scott Furlan.","code":""},{"path":"https://furlan-lab.github.io/flscuts/index.html","id":"acknowledgements-1","dir":"","previous_headings":"","what":"Acknowledgements","title":"Furlan Lab Shortcuts","text":"Written Scott Furlan.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/GMT_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a GMT File to a List of Gene Sets — GMT_to_list","title":"Convert a GMT File to a List of Gene Sets — GMT_to_list","text":"function reads Gene Matrix Transposed (GMT) file converts list element corresponds gene set. names list elements gene set names, contents vectors genes belonging set.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/GMT_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a GMT File to a List of Gene Sets — GMT_to_list","text":"","code":"GMT_to_list(gmt_file)"},{"path":"https://furlan-lab.github.io/flscuts/reference/GMT_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a GMT File to a List of Gene Sets — GMT_to_list","text":"gmt_file character string specifying path GMT file.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/GMT_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a GMT File to a List of Gene Sets — GMT_to_list","text":"named list element vector gene symbols gene set.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/GMT_to_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a GMT File to a List of Gene Sets — GMT_to_list","text":"GMT file format commonly used storing gene sets, provided MSigDB. line GMT file corresponds gene set formatted follows: Gene set name Description (can empty) Gene symbols (tab-separated) function reads GMT file line line, splits line tabs, extracts gene set name list genes.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/GMT_to_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a GMT File to a List of Gene Sets — GMT_to_list","text":"","code":"if (FALSE) { # Convert a GMT file to a list of gene sets gene_sets <- GMT_to_list(\"path/to/your/file.gmt\") }"},{"path":"https://furlan-lab.github.io/flscuts/reference/add_souporcell_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Souporcell Clustering Output to a Seurat Object — add_souporcell_seurat","title":"Add Souporcell Clustering Output to a Seurat Object — add_souporcell_seurat","text":"function adds assay Seurat object based Souporcell clustering results. assay contains log-transformed normalized cluster probabilities Souporcell `clusters.tsv` file. Principal Component Analysis (PCA) performed probabilities, resulting components added dimensionality reduction object. Souporcell 'assignment' added Seurat object's metadata specified label. Optionally, assignments can renamed 1-indexed multiplets collapsed single category.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/add_souporcell_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Souporcell Clustering Output to a Seurat Object — add_souporcell_seurat","text":"","code":"add_souporcell_seurat(   seurat_obj,   souporcell_file,   prefix = NULL,   assay_name = \"GENO\",   key = \"gpca_\",   meta_data_label = \"geno\",   rd_label = \"gpca\",   rename_assignments = TRUE )"},{"path":"https://furlan-lab.github.io/flscuts/reference/add_souporcell_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Souporcell Clustering Output to a Seurat Object — add_souporcell_seurat","text":"seurat_obj Seurat object. souporcell_file Path Souporcell `clusters.tsv` file. prefix Optional prefix prepend cell barcodes. assay_name Name assay add Seurat object. Default \"GENO\". key Key dimensionality reduction. Default \"gpca_\". meta_data_label Name metadata column store Souporcell assignments. Default \"geno\". rd_label Name dimensionality reduction object store PCA results. Default \"gpca\". rename_assignments Logical indicating whether rename Souporcell assignments 1-indexed collapse multiplets. Default TRUE.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/add_souporcell_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Souporcell Clustering Output to a Seurat Object — add_souporcell_seurat","text":"Seurat object added assay, dimensionality reduction, updated metadata.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/add_souporcell_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Souporcell Clustering Output to a Seurat Object — add_souporcell_seurat","text":"","code":"# Assuming 'seurat_obj' is your Seurat object and 'clusters.tsv' is your Souporcell output file: seurat_obj <- add_souporcell_seurat(seurat_obj, \"path/to/clusters.tsv\") #> Error in add_souporcell_seurat(seurat_obj, \"path/to/clusters.tsv\"): Souporcell file does not exist!"},{"path":"https://furlan-lab.github.io/flscuts/reference/annotate_nhood.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate Milo Neighborhoods with Cell Types — annotate_nhood","title":"Annotate Milo Neighborhoods with Cell Types — annotate_nhood","text":"Annotates Milo neighborhoods cell type information filters neighborhoods based abundance threshold.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/annotate_nhood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate Milo Neighborhoods with Cell Types — annotate_nhood","text":"","code":"annotate_nhood(   sce_milo,   da_results,   celltype_var,   abundance_thresh = 0.7,   plot = TRUE )"},{"path":"https://furlan-lab.github.io/flscuts/reference/annotate_nhood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate Milo Neighborhoods with Cell Types — annotate_nhood","text":"sce_milo list containing Milo object design matrix. da_results data frame differential abundance results neighborhoods. celltype_var Character string specifying column metadata containing cell type annotations. abundance_thresh Numeric value specifying minimum fraction threshold cell type considered dominant neighborhood. Default 0.7. plot Logical indicating whether generate diagnostic plots. Default TRUE.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/annotate_nhood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate Milo Neighborhoods with Cell Types — annotate_nhood","text":"list containing: milo updated Milo object. da_results annotated differential abundance results. design design matrix used differential testing.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/annotate_nhood.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Annotate Milo Neighborhoods with Cell Types — annotate_nhood","text":"function annotates neighborhoods cell type information, filters neighborhoods based abundance threshold, optionally generates plots.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/annotate_nhood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate Milo Neighborhoods with Cell Types — annotate_nhood","text":"","code":"# Example usage: # result <- annotate_nhood(sce_milo, da_results, celltype_var = \"cell_type\")"},{"path":"https://furlan-lab.github.io/flscuts/reference/check_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Input Validity — check_input","title":"Check Input Validity — check_input","text":"internal helper function checks validity input parameters.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/check_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Input Validity — check_input","text":"","code":"check_input(input = NULL, name = NULL, valid = NULL)"},{"path":"https://furlan-lab.github.io/flscuts/reference/check_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Input Validity — check_input","text":"input input object validate. name name parameter checked. valid vector valid types/classes input.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/cluster_LSI.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster LSI (Compatible with Monocle3 and Seurat) — cluster_LSI","title":"Cluster LSI (Compatible with Monocle3 and Seurat) — cluster_LSI","text":"function extracts clustering last iteration LSI (see iterative_LSI) single-cell experiment. uses Leiden clustering computes partitions. Compatible Monocle3 `cell_data_set` Seurat objects.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/cluster_LSI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster LSI (Compatible with Monocle3 and Seurat) — cluster_LSI","text":"","code":"cluster_LSI(   object,   k = 20,   weight = FALSE,   num_iter = 1,   resolution = NULL,   random_seed = 2020,   verbose = TRUE,   partition_qval = 0.05 )"},{"path":"https://furlan-lab.github.io/flscuts/reference/cluster_LSI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster LSI (Compatible with Monocle3 and Seurat) — cluster_LSI","text":"object `cell_data_set` Seurat object upon perform operation. k Integer number nearest neighbors use creating k nearest neighbor graph Leiden clustering. Default 20. weight logical argument determine whether use Jaccard coefficients two nearest neighbors (based overlapping kNN) weight used Louvain clustering. Default FALSE. num_iter Integer number iterations used Leiden clustering. Default 1. resolution Parameter controls resolution clustering. NULL (Default), parameter determined automatically. random_seed seed used random number generator. Default 2020. verbose logical flag determine whether print run details. partition_qval Numeric, q-value cutoff determine partition. Default 0.05.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/cluster_LSI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cluster LSI (Compatible with Monocle3 and Seurat) — cluster_LSI","text":"Granja, J. M.et al. (2019). Single-cell multiomic analysis identifies regulatory programs mixed-phenotype acute leukemia. Nature Biotechnology, 37(12), 1458–1465.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/estimate_corrected_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates geneset scores (corrected) — estimate_corrected_score","title":"Calculates geneset scores (corrected) — estimate_corrected_score","text":"function implemented Scott Furlan spirit text . following text taken : Puram, S. V. et al. Single-Cell Transcriptomic Analysis Primary Metastatic Tumor Ecosystems Head Neck Cancer. Cell 171, 1611.e1–1611.e24 (2017). Cell scores (can calculated) order evaluate degree individual cells express certain pre-defined expression program. initially based average expression genes pre-defined program respective cell: Given input set genes (Gj), define score, SCj(), cell , average relative expression (Er) genes Gj. However, initial scores may confounded cell complexity, cells higher complexity genes detected (.e., less zeros) consequently expected higher cell scores gene-set. control effect also add control gene-set (Gjcont); calculate similar cell score control gene-set subtract initial cell scores: SCj() = average[Er(Gj,)] – average[Er(Gjcont,)]. control gene-set selected way ensures similar properties (distribution expression levels) input gene-set properly control effect complexity. First, analyzed genes binned 25 bins equal size based aggregate expression levels (Ea). Next, gene given gene-set, randomly select 100 genes expression bin. way, control gene-set comparable distribution expression levels considered gene-set, 100-fold larger, average expression analogous averaging 100 randomly-selected gene-sets size considered gene-set.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/estimate_corrected_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates geneset scores (corrected) — estimate_corrected_score","text":"","code":"estimate_corrected_score(cds, marker_set1, fData_col = \"gene_short_name\")"},{"path":"https://furlan-lab.github.io/flscuts/reference/estimate_corrected_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates geneset scores (corrected) — estimate_corrected_score","text":"cds Input cell_data_set object. marker_set1 Vector genes gene_metadata DataFrame (fData) can found column 'fData_col' fData_col Character string denoting gene_metadata DataFrame (fData) column contains genes marker_set1.  Default = 'gene_short_name'","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/estimate_corrected_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates geneset scores (corrected) — estimate_corrected_score","text":"Single cell scores give gene set \"corrected\" using 100X genes similar expression levels","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/estimate_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates geneset scores using totals — estimate_score","title":"Calculates geneset scores using totals — estimate_score","text":"Geneset scores score calculated single cell derived one gene. implementation, sum size-factor corrected, log-normalized gene expression give set genes performed","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/estimate_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates geneset scores using totals — estimate_score","text":"","code":"estimate_score(cds, marker_set1, fData_col = \"gene_short_name\")"},{"path":"https://furlan-lab.github.io/flscuts/reference/estimate_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates geneset scores using totals — estimate_score","text":"cds Input cell_data_set object. marker_set1 Vector genes gene_metadata DataFrame (fData) can found column 'fData_col' fData_col Character string denoting gene_metadata DataFrame (fData) column contains genes marker_set1.  Default = 'gene_short_name'","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/estimate_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates geneset scores using totals — estimate_score","text":"Vector single cell scores derived sum gene expression values geneset size factor corrected log-normalized.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/export_seurat_to_10x.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Seurat Object Data to 10X-Style Format with Optional Reductions — export_seurat_to_10x","title":"Export Seurat Object Data to 10X-Style Format with Optional Reductions — export_seurat_to_10x","text":"function exports data Seurat object 10X Genomics-style format. output includes files expression matrix, feature (gene) information, barcodes, metadata, dimensional reductions (e.g., UMAP, PCA), variable features. files written compressed format applicable.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/export_seurat_to_10x.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Seurat Object Data to 10X-Style Format with Optional Reductions — export_seurat_to_10x","text":"","code":"export_seurat_to_10x(seurat_obj, assay = \"RNA\", dir, include_reductions = TRUE)"},{"path":"https://furlan-lab.github.io/flscuts/reference/export_seurat_to_10x.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Seurat Object Data to 10X-Style Format with Optional Reductions — export_seurat_to_10x","text":"seurat_obj Seurat object containing data exported. assay character string indicating assay use Seurat object. Default \"RNA\". dir character string specifying directory output files saved. directory must already exist. include_reductions Logical, whether include cell embeddings reductions (e.g., UMAP, PCA) output. Default TRUE.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/export_seurat_to_10x.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Seurat Object Data to 10X-Style Format with Optional Reductions — export_seurat_to_10x","text":"function return value. writes several files side effect.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/export_seurat_to_10x.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export Seurat Object Data to 10X-Style Format with Optional Reductions — export_seurat_to_10x","text":"function creates several files subdirectory called \"export\" within specified directory: matrix.mtx.gz: compressed Matrix Market file containing assay data (expression matrix). features.tsv.gz: tab-separated file feature (gene) information, including gene IDs names. barcodes.tsv.gz: tab-separated file cell barcodes. metadata.csv: CSV file containing metadata Seurat object. <reduction>_embeddings.tsv.gz: compressed file cell embeddings reduction (e.g., UMAP, PCA), include_reductions set TRUE. variable_features.tsv.gz: compressed file listing variable features. reductions (like UMAP PCA) present Seurat object include_reductions TRUE, cell embeddings reduction written separate files format <reduction>_embeddings.tsv.gz. reductions found include_reductions TRUE, function issue warning still generate files. function create \"export\" subdirectory within specified directory exist.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/export_seurat_to_10x.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export Seurat Object Data to 10X-Style Format with Optional Reductions — export_seurat_to_10x","text":"","code":"if (FALSE) { library(Seurat) seurat_obj <- CreateSeuratObject(counts = matrix(rnorm(100), 10, 10)) export_seurat_to_10x(seurat_obj, assay = \"RNA\", dir = \"output_directory\")  # Export Seurat object with reductions export_seurat_to_10x(seurat_obj, assay = \"RNA\", dir = \"output_directory\", include_reductions = TRUE)  # Export Seurat object without reductions export_seurat_to_10x(seurat_obj, assay = \"RNA\", dir = \"output_directory\", include_reductions = FALSE) }"},{"path":"https://furlan-lab.github.io/flscuts/reference/extract_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Data Using Specified Features (Compatible with Seurat Objects) — extract_data","title":"Extract Data Using Specified Features (Compatible with Seurat Objects) — extract_data","text":"function extracts data `SummarizedExperiment`-like object Seurat object using features specified `query`. Features can identified either name (annotation-based) genomic ranges (range-based).","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/extract_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Data Using Specified Features (Compatible with Seurat Objects) — extract_data","text":"","code":"extract_data(   query,   subject,   annotation = \"row.names\",   verbose = TRUE,   fill_output = TRUE,   duplicate_hits = \"max.disp\",   ignore_strand = TRUE )"},{"path":"https://furlan-lab.github.io/flscuts/reference/extract_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Data Using Specified Features (Compatible with Seurat Objects) — extract_data","text":"query vector feature names (annotation-based search) `GRanges` object (range-based search). subject `SummarizedExperiment` Seurat object extract data. annotation Character, specifies target feature column `subject` search features. Default \"row.names\". verbose Logical, whether print verbose output. Default `TRUE`. fill_output Logical, whether return `subject` object filled zeros features `query` found `subject`. Default `TRUE`. duplicate_hits Character, specifies resolve multiple hits range-based searches. Options : \"max.mean\", \"max.var\", \"max.disp\", \"min.mean\", \"min.var\", \"min.disp\". Default \"max.disp\". ignore_strand Logical, whether ignore strand information range-based searches. Default `TRUE`.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/extract_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Data Using Specified Features (Compatible with Seurat Objects) — extract_data","text":"list containing: - `mat`: matrix extracted data. - `overlap`: ratio features found `subject` compared `query`. - `not_found`: Features found `subject`.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/files3_prep.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Cell Ranger Data Files — files3_prep","title":"Find Cell Ranger Data Files — files3_prep","text":"Identifies correct path Cell Ranger output files (matrix.mtx, barcodes.tsv, genes.tsv features.tsv), possibly compressed uncompressed forms.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/files3_prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Cell Ranger Data Files — files3_prep","text":"","code":"files3_prep(folder)"},{"path":"https://furlan-lab.github.io/flscuts/reference/files3_prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Cell Ranger Data Files — files3_prep","text":"folder Path Cell Ranger output folder.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/files3_prep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Cell Ranger Data Files — files3_prep","text":"path folder containing data files. files found, returns NULL.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/files3_prep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Cell Ranger Data Files — files3_prep","text":"","code":"if (FALSE) { data_folder <- files3_prep(\"/path/to/cellranger/output\") }"},{"path":"https://furlan-lab.github.io/flscuts/reference/find_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Marker Genes for Differentially Abundant Neighborhoods — find_markers","title":"Find Marker Genes for Differentially Abundant Neighborhoods — find_markers","text":"Identifies marker genes differentially abundant neighborhoods.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/find_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Marker Genes for Differentially Abundant Neighborhoods — find_markers","text":"","code":"find_markers(   all_results,   covariate1,   celltype_var,   celltypes = NULL,   plot = TRUE,   da_fdr = 0.1,   marker_p_val = 0.01 )"},{"path":"https://furlan-lab.github.io/flscuts/reference/find_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Marker Genes for Differentially Abundant Neighborhoods — find_markers","text":"all_results list containing Milo object, differential abundance results, design matrix. covariate1 Character string specifying column metadata representing samples covariate. celltype_var Character string specifying column metadata containing cell type annotations. celltypes Character vector specifying cell types consider. NULL, cell types considered. Default NULL. plot Logical indicating whether generate diagnostic plots. Default TRUE. da_fdr Numeric value specifying FDR threshold differentially abundant neighborhoods. Default 0.1. marker_p_val Numeric value specifying p-value threshold marker gene identification. Default 0.01.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/find_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Marker Genes for Differentially Abundant Neighborhoods — find_markers","text":"vector marker gene identifiers.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/find_markers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Marker Genes for Differentially Abundant Neighborhoods — find_markers","text":"function identifies marker genes differentially abundant neighborhoods, optionally focusing specified cell types, can generate diagnostic plots.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/find_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Marker Genes for Differentially Abundant Neighborhoods — find_markers","text":"","code":"# Example usage: # markers <- find_markers(all_results, covariate1 = \"sample_id\", celltype_var = \"cell_type\")"},{"path":"https://furlan-lab.github.io/flscuts/reference/find_partitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Partitions in a Seurat Object Similar to Monocle3 — find_partitions","title":"Find Partitions in a Seurat Object Similar to Monocle3 — find_partitions","text":"Finds partitions (low-resolution clusters) Seurat object using Louvain Leiden clustering, similar find_partition function Monocle3. function computes partitions clustering cells grouping clusters partitions based connectivity.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/find_partitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Partitions in a Seurat Object Similar to Monocle3 — find_partitions","text":"","code":"find_partitions(   obj,   method = \"louvain\",   k = 20,   reduction = \"umap\",   dims = NULL,   weight = FALSE,   num_iter = 1,   resolution_parameter = NULL,   random_seed = 2020,   verbose = TRUE,   partition_q_value = 0.05 )"},{"path":"https://furlan-lab.github.io/flscuts/reference/find_partitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Partitions in a Seurat Object Similar to Monocle3 — find_partitions","text":"obj Seurat object. method character string specifying clustering algorithm use: \"louvain\" \"leiden\". Default \"louvain\". k Integer specifying number nearest neighbors (k) use constructing k-NN graph. Default 20. reduction character string specifying dimensionality reduction use (e.g., \"pca\", \"umap\"). Default \"umap\". dims vector integers specifying dimensions use specified reduction. NULL, dimensions used. Default NULL. weight Logical indicating whether use edge weights clustering. Default FALSE. num_iter Integer specifying number iterations Leiden algorithm. Default 1. resolution_parameter Numeric value specifying resolution parameter clustering. Default NULL, uses Seurat default. random_seed Integer specifying random seed reproducibility. Default 2020. verbose Logical indicating whether display messages computation. Default TRUE. partition_q_value used implementation. Included compatibility.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/find_partitions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Partitions in a Seurat Object Similar to Monocle3 — find_partitions","text":"Seurat object partitions added metadata (obj$partitions).","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/find_partitions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Partitions in a Seurat Object Similar to Monocle3 — find_partitions","text":"function performs clustering using specified method computes partitions constructing cluster graph finding connected components. Cells belonging clusters within connected component assigned partition.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/find_partitions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Partitions in a Seurat Object Similar to Monocle3 — find_partitions","text":"","code":"if (FALSE) { library(Seurat) # Assuming 'seurat_obj' is a Seurat object with PCA and UMAP computed seurat_obj <- find_partitions(seurat_obj, method = \"leiden\", k = 20, reduction = \"umap\", dims = 1:10) # The partitions can be accessed via seurat_obj$partitions }"},{"path":"https://furlan-lab.github.io/flscuts/reference/get_assay.html","id":null,"dir":"Reference","previous_headings":"","what":"get_assay helper — get_assay","title":"get_assay helper — get_assay","text":"Adapted : Jeffrey M. Granja, M. Ryan Corces, Sarah E. Pierce, S. Tansu Bagdatli, Hani Choudhry, Howard Y. Chang, William J. Greenleaf doi: https://doi.org/10.1101/2020.04.28.066498","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/get_assay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_assay helper — get_assay","text":"","code":"get_assay(se = NULL, assayName = NULL)"},{"path":"https://furlan-lab.github.io/flscuts/reference/groupSums.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Sums for Sparse Matrices — groupSums","title":"Group Sums for Sparse Matrices — groupSums","text":"Sums columns matrix grouped factor, optimized sparse matrices.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/groupSums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Sums for Sparse Matrices — groupSums","text":"","code":"groupSums(mat, groups = NULL, sparse = FALSE)"},{"path":"https://furlan-lab.github.io/flscuts/reference/groupSums.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Sums for Sparse Matrices — groupSums","text":"mat numeric matrix sparse matrix. groups factor character vector indicating group membership column mat. sparse Logical indicating whether input matrix sparse. Default FALSE.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/groupSums.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Sums for Sparse Matrices — groupSums","text":"matrix rows corresponding rows mat columns corresponding unique levels groups.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/iterative_LSI.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterative Latent Semantic Indexing (LSI) for Single-Cell Data (Compatible with Monocle3 and Seurat) with optional UMAP — iterative_LSI","title":"Iterative Latent Semantic Indexing (LSI) for Single-Cell Data (Compatible with Monocle3 and Seurat) with optional UMAP — iterative_LSI","text":"function performs iterative LSI single-cell data minimize batch effects accentuate cell type differences. can accept either Monocle3 `cell_data_set` object Seurat object input. function iteratively: 1. Applies TF-IDF transformation Singular Value Decomposition (SVD) normalize data. 2. Clusters normalized data using Leiden clustering high-dimensional space. 3. Identifies -represented features resulting clusters using simple counting method. steps repeated, using features identified step 3 subset normalization matrix step 1, process repeated specified number iterations. method inspired Granja et al. (2019) aims enhance separation cell types reducing batch effects.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/iterative_LSI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterative Latent Semantic Indexing (LSI) for Single-Cell Data (Compatible with Monocle3 and Seurat) with optional UMAP — iterative_LSI","text":"","code":"iterative_LSI(   object,   num_dim = 25,   starting_features = NULL,   resolution = c(1e-04, 3e-04, 5e-04),   do_tf_idf = TRUE,   num_features = c(3000, 3000, 3000),   exclude_features = NULL,   binarize = FALSE,   scale = TRUE,   log_transform = TRUE,   LSI_method = 1,   partition_qval = 0.05,   seed = 2020,   scale_to = 10000,   leiden_k = 20,   leiden_weight = FALSE,   leiden_iter = 1,   verbose = FALSE,   return_iterations = FALSE,   run_umap = FALS,   ... )"},{"path":"https://furlan-lab.github.io/flscuts/reference/iterative_LSI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterative Latent Semantic Indexing (LSI) for Single-Cell Data (Compatible with Monocle3 and Seurat) with optional UMAP — iterative_LSI","text":"object Monocle3 `cell_data_set` object Seurat object. num_dim Integer specifying number principal components use downstream analysis. Default 25. starting_features Optional character vector starting features (e.g., genes peaks) use first iteration. resolution Numeric vector specifying resolution parameters Leiden clustering iteration. number iterations determined length vector. do_tf_idf Logical indicating whether perform TF-IDF transformation. Default TRUE. num_features Integer numeric vector specifying number features use dimensionality reduction iteration. single integer provided, used iterations. Default 3000. exclude_features Optional character vector features (rownames data) exclude analysis. binarize Logical indicating whether binarize data prior TF-IDF transformation. Default FALSE. scale Logical indicating whether scale data scale_to. Default TRUE. log_transform Logical indicating whether log-transform data scaling. Default TRUE. scale_to Numeric value specifying scaling factor scale TRUE. Default 10000. leiden_k Integer specifying number nearest neighbors (k) Leiden clustering. Default 20. leiden_weight Logical indicating whether use edge weights Leiden clustering. Default FALSE. leiden_iter Integer specifying number iterations Leiden clustering. Default 1. verbose Logical indicating whether display progress messages. Default FALSE. run_umap Logical indicating whether run UMAP. ... Additional arguments passed lower-level functions. random_seed Integer specifying random seed reproducibility. Default 2020. return_object Logical indicating whether return updated input object LSI reduction clustering results. Default TRUE.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/iterative_LSI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iterative Latent Semantic Indexing (LSI) for Single-Cell Data (Compatible with Monocle3 and Seurat) with optional UMAP — iterative_LSI","text":"return_object TRUE, returns updated input object (Monocle3 `cell_data_set` Seurat object) LSI reduction clustering results added. FALSE, returns list elements: lsi_embeddings final LSI embeddings. clusters clustering assignments. iterations list containing intermediate results iteration.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/iterative_LSI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Iterative Latent Semantic Indexing (LSI) for Single-Cell Data (Compatible with Monocle3 and Seurat) with optional UMAP — iterative_LSI","text":"function performs iterative LSI described Granja et al. (2019), adapting methods Cusanovich et al. (2018). suitable processing single-cell ATAC-seq RNA-seq data identify meaningful clusters reduce batch effects.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/iterative_LSI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Iterative Latent Semantic Indexing (LSI) for Single-Cell Data (Compatible with Monocle3 and Seurat) with optional UMAP — iterative_LSI","text":"Granja, J. M., et al. (2019). Single-cell multiomic analysis identifies regulatory programs mixed-phenotype acute leukemia. Nature Biotechnology, 37(12), 1458–1465. Cusanovich, D. ., et al. (2018). cis-regulatory dynamics embryonic development single-cell resolution. Nature, 555(7697), 538–542.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/iterative_LSI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Iterative Latent Semantic Indexing (LSI) for Single-Cell Data (Compatible with Monocle3 and Seurat) with optional UMAP — iterative_LSI","text":"","code":"if (FALSE) { # For a Monocle3 cell_data_set object: cds <- iterative_LSI(   object = cds,   num_dim = 30,   resolution = c(1e-4, 3e-4, 5e-4) )  # For a Seurat object: seurat_obj <- iterative_LSI(   object = seurat_obj,   num_dim = 30,   resolution = c(0.2, 0.5, 0.8) ) }"},{"path":"https://furlan-lab.github.io/flscuts/reference/liftover_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"Liftover projection — liftover_projection","title":"Liftover projection — liftover_projection","text":"function transfers labels projector projectee","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/liftover_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Liftover projection — liftover_projection","text":"","code":"liftover_projection(projection, projector, projectee, projector_col = NULL)"},{"path":"https://furlan-lab.github.io/flscuts/reference/liftover_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Liftover projection — liftover_projection","text":"projection projection object created project_data function projector cell_data_set object reduced dimension matrix (currently LSI supported) specified reduced_dim argument model used create low dimensional embedding projectee SummarizedExperiment type object (cell_data_set currently supported) projected using models contained projector projector_col column name projector color cells using nearest neighbor projectee_col column name projectee color cells colors color palatte projectee_col cells","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/make_nhoods.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Milo Neighborhoods from Seurat Object — make_nhoods","title":"Make Milo Neighborhoods from Seurat Object — make_nhoods","text":"Constructs Milo neighborhoods Seurat object differential abundance analysis.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/make_nhoods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Milo Neighborhoods from Seurat Object — make_nhoods","text":"","code":"make_nhoods(   seu,   assay = \"RNA\",   k = 30,   d = 30,   prop = 0.1,   variable = NULL,   covariate1 = NULL,   covariate2 = NULL,   plot = TRUE )"},{"path":"https://furlan-lab.github.io/flscuts/reference/make_nhoods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Milo Neighborhoods from Seurat Object — make_nhoods","text":"seu Seurat object containing single-cell RNA-seq data. assay Character string specifying assay use Seurat object. Default \"RNA\". k Integer specifying number nearest neighbors compute k-NN graph. Default 30. d Integer specifying number dimensions use PCA reduction. Default 30. prop Numeric value specifying proportion cells include neighborhood. Default 0.1. variable Character string specifying column metadata measure differential abundance. covariate1 Character string specifying column metadata representing samples primary covariate. covariate2 Character string specifying column metadata representing batch secondary covariate. plot Logical indicating whether plot neighborhood size histogram. Default TRUE.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/make_nhoods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Milo Neighborhoods from Seurat Object — make_nhoods","text":"list containing: milo Milo object neighborhoods constructed. design data frame representing design matrix differential testing.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/make_nhoods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make Milo Neighborhoods from Seurat Object — make_nhoods","text":"function converts Seurat object SingleCellExperiment object, constructs Milo neighborhoods, counts cells within neighborhoods, prepares design matrix differential abundance testing.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/make_nhoods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Milo Neighborhoods from Seurat Object — make_nhoods","text":"","code":"# Example usage: # result <- make_nhoods(seu, variable=\"condition\", covariate1=\"sample_id\", covariate2=\"batch\")"},{"path":"https://furlan-lab.github.io/flscuts/reference/monocle3_to_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Monocle3 Cell Data Set to Seurat Object — monocle3_to_seurat","title":"Convert Monocle3 Cell Data Set to Seurat Object — monocle3_to_seurat","text":"Converts Monocle3 `cell_data_set` object Seurat object. Optionally, dimensionality reduction embeddings can transferred.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/monocle3_to_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Monocle3 Cell Data Set to Seurat Object — monocle3_to_seurat","text":"","code":"monocle3_to_seurat(   cds,   assay_name = \"RNA\",   monocle_reduction = \"UMAP\",   seurat_reduction = \"umap\",   row.names = \"gene_short_name\",   handle_duplicate_features = c(\"make_unique\", \"remove\"),   normalize = TRUE )"},{"path":"https://furlan-lab.github.io/flscuts/reference/monocle3_to_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Monocle3 Cell Data Set to Seurat Object — monocle3_to_seurat","text":"cds Monocle3 `cell_data_set` object convert. assay_name character string specifying assay name Seurat object. Default \"RNA\". monocle_reduction name reduction Monocle3 transfer (e.g., \"UMAP\"). Use NULL skip transferring reductions. Default \"UMAP\". seurat_reduction name assign reduction Seurat object (e.g., \"umap\"). Use NULL skip transferring reductions. Default \"umap\". row.names character string specifying column rowData(cds) use feature names. Default \"gene_short_name\". handle_duplicate_features handle duplicate feature names. Options \"make_unique\" \"remove\". Default \"make_unique\". normalize Logical, whether run NormalizeData() Seurat object. Default TRUE.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/monocle3_to_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Monocle3 Cell Data Set to Seurat Object — monocle3_to_seurat","text":"Seurat object.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/monocle3_to_seurat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Monocle3 Cell Data Set to Seurat Object — monocle3_to_seurat","text":"function converts Monocle3 `cell_data_set` object Seurat object extracting counts data, cell metadata, feature metadata. can also transfer dimensionality reduction embeddings Monocle3 object Seurat object specified.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/monocle3_to_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Monocle3 Cell Data Set to Seurat Object — monocle3_to_seurat","text":"","code":"if (FALSE) { # Assuming 'cds' is a Monocle3 cell_data_set seurat_obj <- monocle3_to_seurat(   cds,   assay_name = \"RNA\",   monocle_reduction = \"UMAP\",   seurat_reduction = \"umap\" ) }"},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_geneset.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Geneset Scores on Cell Embeddings — plot_geneset","title":"Plot Geneset Scores on Cell Embeddings — plot_geneset","text":"Plots geneset scores single cell dimensionality reduction embedding (e.g., UMAP t-SNE). geneset scores calculated per cell based set genes. using method \"totals\", sum size-factor corrected, log-normalized gene expression given set genes computed. using method \"corrected\", geneset scores corrected using 100 random genes similar expression levels.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_geneset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Geneset Scores on Cell Embeddings — plot_geneset","text":"","code":"plot_geneset(   cds,   marker_set,   name,   fData_col = \"gene_short_name\",   method = c(\"totals\", \"corrected\"),   reduction_method = \"UMAP\",   cell_size = 0.5 )"},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_geneset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Geneset Scores on Cell Embeddings — plot_geneset","text":"cds cell_data_set object monocle3 package. marker_set character vector gene identifiers corresponding genes geneset. name character string representing name geneset (used label). fData_col character string specifying feature data column rowData(cds) contains gene identifiers marker_set. Default \"gene_short_name\". method character string specifying method calculate geneset scores. Either \"totals\" \"corrected\". Default \"totals\". reduction_method character string specifying dimensionality reduction method use plotting. Default \"UMAP\". cell_size Numeric value specifying size points plot. Default 0.5.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_geneset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Geneset Scores on Cell Embeddings — plot_geneset","text":"ggplot object representing cells colored geneset scores.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_geneset.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot Geneset Scores on Cell Embeddings — plot_geneset","text":"Puram, S. V. et al. (2017). Single-Cell Transcriptomic Analysis Primary Metastatic Tumor Ecosystems Head Neck Cancer. Cell, 171(7), 1611–1624.e24.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_geneset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Geneset Scores on Cell Embeddings — plot_geneset","text":"","code":"# Assuming `cds` is a cell_data_set object, and `genes` is a vector of gene identifiers # plot_geneset(cds, marker_set = genes, name = \"MyGeneset\")"},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_grouped_geneset.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Grouped Geneset Scores — plot_grouped_geneset","title":"Plot Grouped Geneset Scores — plot_grouped_geneset","text":"Plots geneset scores single cell, grouped specified variable. plot includes violin plot, boxplot, optionally jittered points raw data. Geneset scores calculated per cell based set genes. using method \"totals\", sum size-factor corrected, log-normalized gene expression given set genes computed. using method \"corrected\", geneset scores corrected using 100 random genes similar expression levels.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_grouped_geneset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Grouped Geneset Scores — plot_grouped_geneset","text":"","code":"plot_grouped_geneset(   cds,   marker_set,   name,   by,   fData_col = \"gene_short_name\",   scale = \"width\",   facet = NULL,   adjust = 1.4,   size = 0.05,   alpha = 0.1,   method = c(\"totals\", \"corrected\"),   overlay_violinandbox = TRUE,   box_width = 0.3,   rotate_x = TRUE,   jitter = TRUE,   return_values = FALSE )"},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_grouped_geneset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Grouped Geneset Scores — plot_grouped_geneset","text":"cds cell_data_set object monocle3 package. marker_set character vector gene identifiers corresponding genes geneset. name character string representing name geneset (used label). character string specifying cell metadata column colData(cds) group cells plot. fData_col character string specifying feature data column rowData(cds) contains gene identifiers marker_set. Default \"gene_short_name\". scale character string specifying violins scaled, passed geom_violin. Default \"width\". facet character string specifying optional cell metadata column colData(cds) facet plot . Default NULL. adjust Numeric value bandwidth adjustment geom_violin. Default 1.4. size Numeric value point size geom_jitter. Default 0.05. alpha Numeric value point transparency geom_jitter. Default 0.1. method character string specifying method calculate geneset scores. Either \"totals\" \"corrected\". Default \"totals\". overlay_violinandbox Logical indicating whether overlay violin box plots. Default TRUE. box_width Numeric value specifying width boxplot. Default 0.3. rotate_x Logical indicating whether rotate x-axis labels 90 degrees. Default TRUE. jitter Logical indicating whether add jittered points plot. Default TRUE. return_values Logical indicating whether return plot scores data frame. FALSE, plot returned. Default FALSE.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_grouped_geneset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Grouped Geneset Scores — plot_grouped_geneset","text":"return_values TRUE, list elements: plot ggplot object. scores data frame containing geneset scores grouping variables. return_values FALSE, ggplot object returned.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_grouped_geneset.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot Grouped Geneset Scores — plot_grouped_geneset","text":"Puram, S. V. et al. (2017). Single-Cell Transcriptomic Analysis Primary Metastatic Tumor Ecosystems Head Neck Cancer. Cell, 171(7), 1611–1624.e24.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_grouped_geneset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Grouped Geneset Scores — plot_grouped_geneset","text":"","code":"# Assuming `cds` is a cell_data_set object, and `genes` is a vector of gene identifiers # plot_grouped_geneset(cds, marker_set = genes, name = \"MyGeneset\", by = \"cell_type\")"},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_projection.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Projection of Projected Data onto Projector's UMAP Embedding (Compatible with Monocle3 and Seurat) — plot_projection","title":"Plot Projection of Projected Data onto Projector's UMAP Embedding (Compatible with Monocle3 and Seurat) — plot_projection","text":"function visualizes projection data one single-cell object onto UMAP embedding another object. allows coloring projected data points based metadata either projector projectee object.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_projection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Projection of Projected Data onto Projector's UMAP Embedding (Compatible with Monocle3 and Seurat) — plot_projection","text":"","code":"plot_projection(   projection,   projector,   projectee,   projector_col = NULL,   projectee_col = NULL )"},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_projection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Projection of Projected Data onto Projector's UMAP Embedding (Compatible with Monocle3 and Seurat) — plot_projection","text":"projection list `SimpleList` containing UMAP coordinates projected data. Typically, output `project_data` function. projector original single-cell object (Monocle3 `cell_data_set` Seurat object) used generate UMAP embedding. projectee single-cell object (Monocle3 `cell_data_set` Seurat object) projected UMAP space. projector_col Optional character string specifying column name projector's metadata use coloring data points. projectee_col Optional character string specifying column name projectee's metadata use coloring data points.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_projection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Projection of Projected Data onto Projector's UMAP Embedding (Compatible with Monocle3 and Seurat) — plot_projection","text":"`ggplot` object visualizing projection.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/plot_projection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Projection of Projected Data onto Projector's UMAP Embedding (Compatible with Monocle3 and Seurat) — plot_projection","text":"","code":"if (FALSE) { # Assuming 'projection' is the output from project_data() plot_projection(   projection = projection,   projector = projector_object,   projectee = projectee_object,   projector_col = \"cell_type\",   projectee_col = \"sample_id\" ) }"},{"path":"https://furlan-lab.github.io/flscuts/reference/project_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Project Data into UMAP Embedding of Single-Cell Object (Compatible with Monocle3 and Seurat) — project_data","title":"Project Data into UMAP Embedding of Single-Cell Object (Compatible with Monocle3 and Seurat) — project_data","text":"function projects data one single-cell object (similar structure) UMAP embedding another object. embedding must precomputed using methods LSI PCA. allows co-embedding new data existing embedding space.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/project_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project Data into UMAP Embedding of Single-Cell Object (Compatible with Monocle3 and Seurat) — project_data","text":"","code":"project_data(   projector = NULL,   projectee = NULL,   ncells_coembedding = 5000,   scale = FALSE,   reduced_dim = \"LSI\",   embedding = \"UMAP\",   make_pseudo_single_cells = FALSE,   features = c(\"annotation-based\", \"range-based\"),   n = 250,   verbose = TRUE,   threads = 6,   seed = 2020,   force = FALSE )"},{"path":"https://furlan-lab.github.io/flscuts/reference/project_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project Data into UMAP Embedding of Single-Cell Object (Compatible with Monocle3 and Seurat) — project_data","text":"projector `cell_data_set` Seurat object containing reduced dimension matrix (e.g., LSI) model used generate UMAP embedding. projectee `SummarizedExperiment`, `cell_data_set`, Seurat object projected UMAP space defined projector. ncells_coembedding Numeric, number cells use `projector` co-embedding pseudo-single cells. Default 5000, total number cells less 5000. scale Logical, whether scale projected data projection. Default `FALSE`. reduced_dim Character, specifies reduced dimension method (e.g., \"LSI\" \"PCA\"). Default \"LSI\". embedding Character, specifies embedding type used (currently \"UMAP\" supported). Default \"UMAP\". make_pseudo_single_cells Logical, whether simulate pseudo-single cells `projectee` data, useful bulk data. Default `FALSE`. features Character vector, specifying whether projection based \"annotation-based\" \"range-based\" features. Default `c(\"annotation-based\", \"range-based\")`. n Integer, number subsampled \"pseudo single cells\" per bulk sample, relevant `make_pseudo_single_cells` `TRUE`. Default 250. verbose Logical, whether print verbose output execution. Default `TRUE`. threads Integer, number threads parallel execution. Default 6. seed Integer, seed reproducibility. Default 2020. force Logical, whether continue even overlap ratio features `projector` `projectee` certain threshold. Default `FALSE`.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/project_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project Data into UMAP Embedding of Single-Cell Object (Compatible with Monocle3 and Seurat) — project_data","text":"`SimpleList` object containing UMAP coordinates projected data (original single-cell simulated bulk data) reduced dimension matrix.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/project_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project Data into UMAP Embedding of Single-Cell Object (Compatible with Monocle3 and Seurat) — project_data","text":"function supports projections using models built UMAP embeddings, ideal comparing single-cell data, can also simulate pseudo-single cells bulk data. adapted : *ArchR: integrative scalable software package single-cell chromatin accessibility analysis* Granja et al. (2020).","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/read_cds_cellranger_h5_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Cell Ranger H5 File into Monocle3 cell_data_set — read_cds_cellranger_h5_file","title":"Read Cell Ranger H5 File into Monocle3 cell_data_set — read_cds_cellranger_h5_file","text":"Reads Cell Ranger output H5 file converts cell_data_set object use Monocle3.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/read_cds_cellranger_h5_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Cell Ranger H5 File into Monocle3 cell_data_set — read_cds_cellranger_h5_file","text":"","code":"read_cds_cellranger_h5_file(h5_file)"},{"path":"https://furlan-lab.github.io/flscuts/reference/read_cds_cellranger_h5_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Cell Ranger H5 File into Monocle3 cell_data_set — read_cds_cellranger_h5_file","text":"h5_file Path Cell Ranger H5 file.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/read_cds_cellranger_h5_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Cell Ranger H5 File into Monocle3 cell_data_set — read_cds_cellranger_h5_file","text":"cell_data_set object containing expression data associated metadata.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/read_cds_cellranger_h5_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Cell Ranger H5 File into Monocle3 cell_data_set — read_cds_cellranger_h5_file","text":"function reads H5 file produced Cell Ranger constructs cell_data_set object, including expression matrices, cell metadata, gene metadata.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/read_cds_cellranger_h5_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Cell Ranger H5 File into Monocle3 cell_data_set — read_cds_cellranger_h5_file","text":"","code":"if (FALSE) { cds <- read_cds_cellranger_h5_file(\"path/to/filtered_feature_bc_matrix.h5\") }"},{"path":"https://furlan-lab.github.io/flscuts/reference/read_cds_starsolo_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read STARsolo Output Files into Monocle3 cell_data_set — read_cds_starsolo_file","title":"Read STARsolo Output Files into Monocle3 cell_data_set — read_cds_starsolo_file","text":"Reads STARsolo output files (matrix.mtx, barcodes.tsv, features.tsv) converts cell_data_set object use Monocle3.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/read_cds_starsolo_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read STARsolo Output Files into Monocle3 cell_data_set — read_cds_starsolo_file","text":"","code":"read_cds_starsolo_file(folder)"},{"path":"https://furlan-lab.github.io/flscuts/reference/read_cds_starsolo_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read STARsolo Output Files into Monocle3 cell_data_set — read_cds_starsolo_file","text":"folder Path folder containing STARsolo output files.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/read_cds_starsolo_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read STARsolo Output Files into Monocle3 cell_data_set — read_cds_starsolo_file","text":"cell_data_set object containing expression data associated metadata.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/read_cds_starsolo_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read STARsolo Output Files into Monocle3 cell_data_set — read_cds_starsolo_file","text":"function reads STARsolo output files constructs cell_data_set object, including expression matrices, cell metadata, gene metadata. function supports compressed (.gz) uncompressed files.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/read_cds_starsolo_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read STARsolo Output Files into Monocle3 cell_data_set — read_cds_starsolo_file","text":"","code":"if (FALSE) { cds <- read_cds_starsolo_file(\"path/to/STARsolo/output\") }"},{"path":"https://furlan-lab.github.io/flscuts/reference/safe_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Matrix Safely — safe_subset","title":"Subset Matrix Safely — safe_subset","text":"Safely subsets matrix, filling missing rows columns zeros necessary.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/safe_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Matrix Safely — safe_subset","text":"","code":"safe_subset(mat = NULL, subsetRows = NULL, subsetCols = NULL)"},{"path":"https://furlan-lab.github.io/flscuts/reference/safe_subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Matrix Safely — safe_subset","text":"mat matrix subset. subsetRows Character vector specifying row names subset. subsetCols Character vector specifying column names subset.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/safe_subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Matrix Safely — safe_subset","text":"subsetted matrix, potentially filled zeros.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/seurat_to_monocle3.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Seurat Object to Monocle3 Cell Data Set — seurat_to_monocle3","title":"Convert Seurat Object to Monocle3 Cell Data Set — seurat_to_monocle3","text":"Converts Seurat object Monocle3 `cell_data_set` object. Optionally, dimensionality reduction embeddings can transferred.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/seurat_to_monocle3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Seurat Object to Monocle3 Cell Data Set — seurat_to_monocle3","text":"","code":"seurat_to_monocle3(   seurat_obj,   assay_name = \"RNA\",   seurat_reduction = \"umap\",   monocle_reduction = \"UMAP\" )"},{"path":"https://furlan-lab.github.io/flscuts/reference/seurat_to_monocle3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Seurat Object to Monocle3 Cell Data Set — seurat_to_monocle3","text":"seurat_obj Seurat object convert. assay_name character string specifying assay use Seurat object. Default \"RNA\". seurat_reduction name reduction Seurat transfer (e.g., \"umap\"). Use NULL skip transferring reductions. Default \"umap\". monocle_reduction name assign reduction Monocle3 object (e.g., \"UMAP\"). Use NULL skip transferring reductions. Default \"UMAP\".","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/seurat_to_monocle3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Seurat Object to Monocle3 Cell Data Set — seurat_to_monocle3","text":"Monocle3 `cell_data_set` object.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/seurat_to_monocle3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Seurat Object to Monocle3 Cell Data Set — seurat_to_monocle3","text":"function converts Seurat object Monocle3 `cell_data_set` object extracting counts data, cell metadata, gene metadata. can also transfer dimensionality reduction embeddings Seurat object Monocle3 object specified.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/seurat_to_monocle3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Seurat Object to Monocle3 Cell Data Set — seurat_to_monocle3","text":"","code":"if (FALSE) { # Assuming 'seurat_obj' is a Seurat object cds <- seurat_to_monocle3(   seurat_obj,   assay_name = \"RNA\",   seurat_reduction = \"umap\",   monocle_reduction = \"UMAP\" ) }"},{"path":"https://furlan-lab.github.io/flscuts/reference/sfc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Color Palette — sfc","title":"Generate a Color Palette — sfc","text":"Creates color palette specified length, optionally scrambled.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/sfc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Color Palette — sfc","text":"","code":"sfc(n, scramble = FALSE)"},{"path":"https://furlan-lab.github.io/flscuts/reference/sfc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Color Palette — sfc","text":"n Integer specifying number colors generate. scramble Logical indicating whether randomly shuffle colors. Default FALSE.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/sfc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Color Palette — sfc","text":"character vector hex color codes.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/sfc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Color Palette — sfc","text":"#' @title Lighten Darken Color #' @description Adjusts brightness hex color specified amount. #' @param col character string representing hex color (e.g., \"#FF0000\"). #' @param amt Integer value -255 255 indicating amount lighten darken color. #' @return hex color string representing adjusted color. #' @export lighten_darken_color <- function(col, amt)    (substring(col, 1, 1) == \"#\")      col <- substring(col, 2)  num <- .integer(paste0(\"0x\", col))   r <- (num >> 16) & 0xFF   g <- (num >> 8) & 0xFF   b <- num & 0xFF  adjust <- function(x)      x <- x + amt     x <- max(min(255, x), 0)     return(x)  r <- adjust(r)   g <- adjust(g)   b <- adjust(b)  new_col <- sprintf(\"#   return(new_col)","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/sparseRowVariances.html","id":null,"dir":"Reference","previous_headings":"","what":"Sparse Row Variances — sparseRowVariances","title":"Sparse Row Variances — sparseRowVariances","text":"Computes variances rows sparse matrix efficiently.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/sparseRowVariances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sparse Row Variances — sparseRowVariances","text":"","code":"sparseRowVariances(m)  sparseRowVariances(m)"},{"path":"https://furlan-lab.github.io/flscuts/reference/sparseRowVariances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sparse Row Variances — sparseRowVariances","text":"m sparse matrix class dgCMatrix.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/sparseRowVariances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sparse Row Variances — sparseRowVariances","text":"numeric vector row variances.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/sparseRowVariances.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sparse Row Variances — sparseRowVariances","text":"Granja, J. M.et al. (2019). Single-cell multiomic analysis identifies regulatory programs mixed-phenotype acute leukemia. Nature Biotechnology, 37(12), 1458–1465.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/svd_lsi.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform SVD for Latent Semantic Indexing — svd_lsi","title":"Perform SVD for Latent Semantic Indexing — svd_lsi","text":"Computes Singular Value Decomposition (SVD) term-frequency matrix dimensionality reduction.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/svd_lsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform SVD for Latent Semantic Indexing — svd_lsi","text":"","code":"svd_lsi(sp_mat, num_dim, mat_only = T)"},{"path":"https://furlan-lab.github.io/flscuts/reference/svd_lsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform SVD for Latent Semantic Indexing — svd_lsi","text":"sp_mat term-frequency sparse matrix (genes x cells). num_dim number dimensions retain. mat_only Logical indicating whether return transformed matrix. Default TRUE.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/svd_lsi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform SVD for Latent Semantic Indexing — svd_lsi","text":"`mat_only` TRUE, returns transformed matrix; otherwise, returns list containing matrix SVD components.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/test_nhoods.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Milo Neighborhoods for Differential Abundance — test_nhoods","title":"Test Milo Neighborhoods for Differential Abundance — test_nhoods","text":"Tests Milo neighborhoods differential abundance using specified design formula.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/test_nhoods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Milo Neighborhoods for Differential Abundance — test_nhoods","text":"","code":"test_nhoods(sce_milo, formula_str)"},{"path":"https://furlan-lab.github.io/flscuts/reference/test_nhoods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Milo Neighborhoods for Differential Abundance — test_nhoods","text":"sce_milo list containing Milo object design matrix, returned make_nhoods. formula_str character string representing design formula differential testing (e.g., \"~ condition\").","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/test_nhoods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test Milo Neighborhoods for Differential Abundance — test_nhoods","text":"data frame differential abundance results neighborhoods.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/test_nhoods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test Milo Neighborhoods for Differential Abundance — test_nhoods","text":"function performs differential abundance testing neighborhoods using specified design formula.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/test_nhoods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Milo Neighborhoods for Differential Abundance — test_nhoods","text":"","code":"# Example usage: # da_results <- test_nhoods(sce_milo, formula_str = \"~ condition\")"},{"path":"https://furlan-lab.github.io/flscuts/reference/tf_idf_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs TF-IDF transformation on a cell_data_set — tf_idf_transform","title":"Performs TF-IDF transformation on a cell_data_set — tf_idf_transform","text":"Just like sounds.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/tf_idf_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs TF-IDF transformation on a cell_data_set — tf_idf_transform","text":"","code":"tf_idf_transform(input, method = 1, verbose = T)"},{"path":"https://furlan-lab.github.io/flscuts/reference/tf_idf_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs TF-IDF transformation on a cell_data_set — tf_idf_transform","text":"cds_list Input cell_data_set object sparse matrix.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/writeMMgz.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a compressed MatrixMarket file — writeMMgz","title":"Write a compressed MatrixMarket file — writeMMgz","text":"function writes sparse matrix MatrixMarket format compressed `.gz` file. function handles real integer matrix types.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/writeMMgz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a compressed MatrixMarket file — writeMMgz","text":"","code":"writeMMgz(x, file)"},{"path":"https://furlan-lab.github.io/flscuts/reference/writeMMgz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a compressed MatrixMarket file — writeMMgz","text":"x sparse matrix (typically dgCMatrix ngCMatrix object). file character string specifying output file name, compressed `.gz` format.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/writeMMgz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a compressed MatrixMarket file — writeMMgz","text":"function return value. writes file side effect.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/writeMMgz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a compressed MatrixMarket file — writeMMgz","text":"function writes matrix MatrixMarket coordinate format. first writes header indicating matrix type size, appends matrix data. matrix `ngCMatrix`, treated integer matrix, otherwise real matrix. function compresses output `.gz` file.","code":""},{"path":"https://furlan-lab.github.io/flscuts/reference/writeMMgz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a compressed MatrixMarket file — writeMMgz","text":"","code":"if (FALSE) { library(Matrix) m <- Matrix(c(0, 1, 0, 2), 2, 2, sparse = TRUE) writeMMgz(m, \"matrix.mtx.gz\") }"},{"path":"https://furlan-lab.github.io/flscuts/news/index.html","id":"flscuts-v010","dir":"Changelog","previous_headings":"","what":"flscuts v0.1.0","title":"flscuts v0.1.0","text":"first stable version","code":""}]
